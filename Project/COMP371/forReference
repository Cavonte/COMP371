

///old set vbo
	/*std::map<int, Object*>::iterator itr = objects.begin();
	while (itr != objects.end()) {		
			itr = objects.erase(itr);
	}
	*/

		///----------------
	//glGenVertexArrays(1, &VAO);

	//glGenBuffers(1, &vertices_VBO);
	//glGenBuffers(1, &normals_VBO);
	//glGenBuffers(1, &uvs_VBO);

	////Bed
	//setIndividualBuffers(VAO, vertices_VBO, normals_VBO, uvs_VBO, 1);
	///--------	

	////Inverted Cube
	//glGenVertexArrays(1, &VAOINVERTEDWALLS);

	//glGenBuffers(1, &vertices_inverted_walls_VBO);
	//glGenBuffers(1, &normals_inverted_walls_VBO);
	//glGenBuffers(1, &uvs_inverted_walls_VBO);
	//setIndividualBuffers(VAOINVERTEDWALLS, vertices_inverted_walls_VBO, normals_inverted_walls_VBO, uvs_inverted_walls_VBO, 0);

	////Wall
	//glGenVertexArrays(1, &VAOWall);

	//glGenBuffers(1, &verticesWall);
	//glGenBuffers(1, &normalsWall);
	//glGenBuffers(1, &uvsWall);

	//setIndividualBuffers(VAOWall, verticesWall, normalsWall, uvsWall, 1);

	//glBindVertexArray(0); // Unbind VAO (it's always a good thing to unbind any buffer/array to prevent strange bugs), remember: do NOT unbind the EBO, keep it bound to this VAO


///Main

		//Object *invWalls = new Object(0, INVERTED_WALLS_NAME);
	//Object *bed = new Object(1, BED1_NAME);
	//Object *wall = new Object(1, WALL);

	/*Object *cabinet = new Object(3, CABINET3_NAME);
	Object *coffee = new Object(4, COFFEE_TABLE1_NAME);
	Object *toilet = new Object(5, TOILET_NAME);
	Object *torchere = new Object(6, TORCHERE1_NAME);*/

	//invWalls->loadObjToMap(objects);
	//objects[invWalls->id] = invWalls;

	//bed->loadObjToMap(objects);
	//objects[bed->id] = bed;

	//wall->loadObjToMap(objects);
	//objects[wall->id] = wall;

	//objectTriangles[bed->name] = bed->triangles;

	//cabinet->loadObjToMap(objects);	
	//objects[cabinet->name] = cabinet;

	//coffee->loadObjToMap(objects);	
	//objects[coffee->name] = coffee;

	//toilet->loadObjToMap(objects);
	//objects[toilet->name] = toilet;

	//torchere->loadObjToMap(objects);	
	//objects[torchere->name] = torchere;


	//garbage collection
	//bed = nullptr;
	//cabinet = nullptr;
	//coffee = nullptr;
	//toilet = nullptr;
	//torchere = nullptr;
	//floor = nullptr;
	//wall = nullptr;
	//delete bed;
	//delete cabinet;
	//delete coffee;
	//delete toilet;
	//delete torchere;
	//delete floor;
	//delete wall;